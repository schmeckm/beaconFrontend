{"version":3,"file":"static/js/4613.09e18127.chunk.js","mappings":"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","sources":["components/CustomModal.js","screens/Environment/index.js"],"sourcesContent":["import { CButton, CModal, CModalBody, CModalFooter, CModalHeader } from '@coreui/react'\nimport React from 'react'\n\nexport default function CustomModal(props) {\n    const { modal, setModal, deleteEntry } = props;\n\n    return (\n        <div className='delete_modal_box'>\n            <CModal\n                show={modal}\n                onClose={setModal}\n            >\n                <CModalHeader closeButton>\n                </CModalHeader>\n                <CModalBody className='delete_modal_body'>\n                    <p> Are you sure you want to delete this record ?</p>\n                    <div className='btn-div-modal-group delete_modal_Btns'>\n                        <button onClick={() => deleteEntry()} className='delete_modal_yes_Btn'>Yes, Approve</button>\n                        <button className='btn btn-primary delete_modal_cancel_Btn' color=\"secondary\" onClick={() => setModal(false)}>Cancel</button>\n                    </div>\n                </CModalBody>\n            </CModal>\n        </div>\n    )\n}\n","import { CBadge, CCard, CCardBody, CCol, CDataTable } from '@coreui/react';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { url } from '../../helpers/helpers';\nimport CustomModal from '../../components/CustomModal';\n\nexport default function Index() {\n  const fields = ['#', 'name','description', 'text1','text2','width','height','distance_Points','action'];\n  const [environmentList, setEnvironmentList] = React.useState([]);\n  const [id, setId] = React.useState(null);\n  const [modal, setModal] = React.useState(false);\n\n  React.useEffect(() => {\n\n    async function fetchData() {\n      const response = await fetch(url + 'environment/getAllEnvironments', {\n        method: 'GET',\n      })\n\n      if (response.ok === true) {\n        const data = await response.json();\n        setEnvironmentList(data.data.map((item, index) => {\n          return {\n            '#': index + 1,\n            'id': item._id,\n            'name': item.name,\n            'description':item.description,\n            'text1':item.text1,\n            'text2':item.text2,\n            'width' : item.width,\n            'height' : item.height,\n            'distance_Points' : item.distance_points\n          }\n        }))\n      }\n    }\n    fetchData();\n  }, [])\n\n  const deleteEntry = () => {\n    async function deleteData() {\n      const response = await fetch(url + 'environment/deleteEnvironment/' + id, {\n        method: 'DELETE',\n      })\n\n      const data = await response.json();\n      if (data.success == true) {\n        setModal(false);\n        setId('');\n        async function fetchData() {\n          const response = await fetch(url + 'environment/getAllEnvironments', {\n            method: 'GET',\n          })\n\n          if (response.ok === true) {\n            const data = await response.json();\n            setEnvironmentList(data.data.map((item, index) => {\n                return {\n                  '#': index + 1,\n                  'id': item._id,\n                  'name': item.name,\n                  'description':item.description,\n                  'text1':item.text1,\n                  'text2':item.text2,\n                  'width' : item.width,\n                  'height' : item.height,\n                  'distance_Points' : item.distance_points\n                }\n              }))\n          }\n        }\n        fetchData();\n      }\n    }\n    deleteData();\n  }\n  const showModal = value => {\n    setId(value);\n    setModal(true)\n  }\n  return (\n    <section>\n      <CustomModal modal={modal} setModal={setModal} deleteEntry={deleteEntry} />\n      <Link className=\"btn btn-primary mb-3 ml-3\" to='/create/environment'>Create Environment</Link>\n      <CCol xs=\"12\" lg=\"12\">\n        <CCard>\n          <CCardBody>\n            <CDataTable\n              items={environmentList}\n              fields={fields}\n              columnFilter\n              tableFilter\n              itemsPerPageSelect\n              itemsPerPage={5}\n              hover\n              sorter\n              pagination\n              scopedSlots={{\n                'action': (item) => (\n                  <td>\n                    <Link className=\"mr-2\" to={`/edit/environment/${item.id}`}><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></Link>\n                    <i style={{ cursor: \"pointer\" }} onClick={() => showModal(item.id)} className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                  </td>\n                )\n              }\n              }\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </section>\n  )\n}"],"names":["CustomModal","props","modal","setModal","deleteEntry","className","show","onClose","closeButton","onClick","color","Index","React","environmentList","setEnvironmentList","id","setId","fetch","url","method","response","ok","json","data","map","item","index","_id","name","description","text1","text2","width","height","distance_points","fetchData","success","deleteData","to","xs","lg","items","fields","columnFilter","tableFilter","itemsPerPageSelect","itemsPerPage","hover","sorter","pagination","scopedSlots","style","cursor","value"],"sourceRoot":""}