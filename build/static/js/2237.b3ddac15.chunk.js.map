{"version":3,"file":"static/js/2237.b3ddac15.chunk.js","mappings":"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","sources":["screens/BeaconConfiguration/GetPosition.js"],"sourcesContent":["import { url } from '../../helpers/helpers';\nimport React from 'react'\nimport Select from 'react-select'\nimport moment from 'moment';\n\nimport { CCard, CCardBody, CCol, CDataTable } from '@coreui/react';\nimport { toast, ToastContainer } from 'react-toastify';\nexport default function GetPosition() {\n    const fields = ['#', 'beaconMac', 'positionX', 'positionY', 'createdAt'];\n    const [beacons, setBeacons] = React.useState([]);\n    const [currentBeacon, setCurrentBeacon] = React.useState(\"\");\n    const [start, setStart] = React.useState(\"\");\n    const [end, setEnd] = React.useState(\"\");\n    const [list, setList] = React.useState([]);\n\n    React.useEffect(() => {\n        async function fetchData() {\n            const response = await fetch(url + 'dbBeacon/getAllBeacons', {\n                method: 'GET',\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n\n                setBeacons(data.data.map((item, index) => {\n                    return {\n                        'value': item._id,\n                        'label': item.beaconMac,\n                    }\n                }))\n            }\n        }\n        fetchData();\n    }, [])\n\n    function submit(e) {\n        e.preventDefault();\n\n        if (currentBeacon) {\n            async function send() {\n                const response = await fetch(url + 'beacon/getPosition', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        \"beaconMac\": currentBeacon.label,\n                        \"startTime\": new Date(start).toISOString(),\n                        \"endTime\": new Date(end).toISOString()\n                    })\n                });\n\n                if (response.ok == true) {\n                    const data = await response.json();\n                    if (data.success == true) {\n                        console.log(data);\n                        console.log(start);\n                        setList(data.data.map((item, index) => {\n                            return {\n                                '#': index + 1,\n                                'id': item._id,\n                                'beaconMac': item.beaconMac,\n                                'positionX': item.positionX,\n                                'positionY': item.positionY,\n                                'createdAt': moment(item.createdAt).format(\"MM-DD-YYYY hh:mm:ss A\")\n                            }\n                        }))\n                    }\n                } else {\n                    toast.error(\"Oops something went wrong!\");\n                }\n            };\n            send()\n        } else {\n            toast.error(\"Please select beacon\");\n        }\n    }\n\n    return (\n        <div>\n        <div className=\"container create-page-main-section\">\n            <div className='p-sm-5 create-form-field'>\n                <form onSubmit={e => submit(e)}>\n                    <div className='row'>\n                        <div className='col-md-4 form-group'>\n                            <label>Beacon</label>\n                            <Select value={currentBeacon} onChange={setCurrentBeacon} options={beacons} />\n                        </div>\n                        <div className='col-md-4 form-group'>\n                            <label>Start Time</label>\n                            <input type=\"datetime-local\" className='form-control' value={start} onChange={e => setStart(e.target.value)} required />\n                        </div>\n                        <div className='col-md-4 form-group'>\n                            <label>End Time</label>\n                            <input type=\"datetime-local\" className='form-control' value={end} onChange={e => setEnd(e.target.value)} required />\n                        </div>\n                    </div>\n                    <div className=\"d-flex justify-content-center create-catagory-btns\">\n                        <button onClick={() => window.history.back()} type=\"button\" className=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                            className=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                        <button type=\"submit\" className=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Execute<i\n                            className=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div className=\"container\">\n            <CCol className=\"mt-2\" xs=\"12\" lg=\"12\">\n                <CCard>\n                    <CCardBody>\n                        <CDataTable\n                            items={list}\n                            fields={fields}\n                            columnFilter\n                            tableFilter\n                            itemsPerPageSelect\n                            itemsPerPage={5}\n                            hover\n                            sorter\n                            pagination\n                        />\n                    </CCardBody>\n                </CCard>\n            </CCol>\n        </div>\n        <ToastContainer />\n    </div>\n    )\n}\n"],"names":["GetPosition","React","beacons","setBeacons","currentBeacon","setCurrentBeacon","start","setStart","end","setEnd","list","setList","fetch","url","method","response","ok","json","data","map","item","index","_id","beaconMac","fetchData","className","onSubmit","e","preventDefault","send","headers","body","JSON","stringify","label","Date","toISOString","success","console","log","positionX","positionY","moment","createdAt","format","toast","submit","value","onChange","options","type","target","required","onClick","window","history","back","xs","lg","items","fields","columnFilter","tableFilter","itemsPerPageSelect","itemsPerPage","hover","sorter","pagination"],"sourceRoot":""}