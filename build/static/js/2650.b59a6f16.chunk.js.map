{"version":3,"file":"static/js/2650.b59a6f16.chunk.js","mappings":"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","sources":["screens/Zone/edit.js"],"sourcesContent":["import React from 'react'\nimport { url } from '../../helpers/helpers';\nimport { useParams } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\n\nexport default function Edit() {\n    const { id } = useParams();\n    const [zoneId, setZoneId] = React.useState('');\n    const [environment, setEnvironment] = React.useState('');\n    const [description, setDescription] = React.useState('');\n    const [text1, setText1] = React.useState('');\n    const [text2, setText2] = React.useState('');\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        async function submitData() {\n            \n            let data = {\n                \"text1\": text1,\n            }\n\n            const response = await fetch(url + 'zone/updateZone/' + id, {\n                method: 'PUT',\n                headers : {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                if (data.success == true) {\n                    return window.location = window.location.origin + '/#/zoneList'\n                } else {\n                    toast.error(\"Internal Server Error!\");\n                }\n            }\n        }\n        submitData();\n    }\n\n    React.useEffect(() => {\n        async function fetchData() {\n            const response = await fetch(url + 'zone/getSingleZone/' + id, {\n                method: 'GET',\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                if (data.success == true) {\n                    const zone_detail = data.data;\n                    setZoneId(zone_detail.zoneId);\n                    setDescription(zone_detail.description);\n                    setText1(zone_detail.text1);\n                    setText2(zone_detail.text2);\n                    setEnvironment(zone_detail.environment);\n                }else{\n                    toast.error(\"Oops something went wrong!\")\n                }\n\n            }\n            else toast.error('Response not fetched properly');\n        }\n        fetchData();\n    }, [id])\n\n    return (\n        <div className=\"container create-page-main-section\">\n            <form onSubmit={e => handleSubmit(e)}>\n                <div className='p-sm-5 create-form-field'>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">ZoneId:</label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input readOnly value={zoneId} onChange={e => setZoneId(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Environment:</label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input readOnly value={environment} onChange={e => setEnvironment(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Description:</label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input readOnly value={description} onChange={e => setDescription(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Text1:<span className='required-label'>*</span></label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={text1} onChange={e => setText1(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Text2:</label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input readOnly value={text2} onChange={e => setText2(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"d-flex justify-content-center create-catagory-btns\">\n                    <button onClick={() => window.history.back()} type=\"button\" className=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                        className=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"submit\" className=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        className=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n            <ToastContainer />\n        </div>\n    )\n}"],"names":["Edit","id","useParams","React","zoneId","setZoneId","environment","setEnvironment","description","setDescription","text1","setText1","text2","setText2","fetch","url","method","response","ok","json","data","success","zone_detail","toast","fetchData","className","onSubmit","e","headers","body","JSON","stringify","window","location","origin","preventDefault","submitData","handleSubmit","htmlFor","readOnly","value","onChange","target","type","required","onClick","history","back"],"sourceRoot":""}