{"version":3,"file":"static/js/1225.3bf4de22.chunk.js","mappings":"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","sources":["screens/Gateway/edit.js"],"sourcesContent":["import React from \"react\";\nimport { url } from \"../../helpers/helpers\";\nimport { useParams } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\n\nexport default function Edit() {\n  const { id } = useParams();\n  const [gatewayMac, setGatewayMac] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [text1, setText1] = React.useState(\"\");\n  const [text2, setText2] = React.useState(\"\");\n  const [gatewayX, setGatewayX] = React.useState(\"\");\n  const [gatewayY, setGatewayY] = React.useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    async function submitData() {\n      let data = {\n        description: description,\n        text1: text1,\n        text2: text2,\n        gatewayX: gatewayX,\n        gatewayY: gatewayY,\n      };\n\n      const response = await fetch(url + \"gateway/updateGateway/\" + id, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (response.ok === true) {\n        const data = await response.json();\n        if (data.success == true) {\n          toast.info(\"gateway updated successfully\");\n          return (window.location = window.location.origin + \"/#/gatewayList\");\n        } else {\n          toast.error(\"Internal Server Error!\");\n        }\n      }\n    }\n    submitData();\n  };\n\n  React.useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(url + \"gateway/getSingleGateway/\" + id, {\n        method: \"GET\",\n      });\n\n      if (response.ok === true) {\n        const data = await response.json();\n        if (data.success == true) {\n          const gateway_detail = data.data;\n          setGatewayMac(gateway_detail.gatewayMac);\n          setDescription(gateway_detail.description);\n          setText1(gateway_detail.text1);\n          setText2(gateway_detail.text2);\n          setGatewayX(gateway_detail.gatewayX);\n          setGatewayY(gateway_detail.gatewayY);\n        } else {\n          toast.error(\"Oops something went wrong!\");\n        }\n      } else toast.error(\"Response not fetched properly\");\n    }\n    fetchData();\n  }, [id]);\n\n  return (\n    <div className=\"container create-page-main-section\">\n      <form onSubmit={(e) => handleSubmit(e)}>\n        <div className=\"p-sm-5 create-form-field\">\n          <div className=\"form-group row\">\n            <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">\n              GatewayMac:\n            </label>\n            <div className=\"d-flex align-items-sm-center col-sm-10\">\n              <input\n                readOnly\n                value={gatewayMac}\n                type=\"text\"\n                className=\"form-control\"\n                id=\"inputPassword\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">\n              Description:<span className=\"required-label\">*</span>\n            </label>\n            <div className=\"d-flex align-items-sm-center col-sm-10\">\n              <input\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                type=\"text\"\n                className=\"form-control\"\n                id=\"inputPassword\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">\n              Text1:<span className=\"required-label\">*</span>\n            </label>\n            <div className=\"d-flex align-items-sm-center col-sm-10\">\n              <input\n                required\n                value={text1}\n                onChange={(e) => setText1(e.target.value)}\n                type=\"text\"\n                className=\"form-control\"\n                id=\"inputPassword\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">\n              Text2:<span className=\"required-label\">*</span>\n            </label>\n            <div className=\"d-flex align-items-sm-center col-sm-10\">\n              <input\n                required\n                value={text2}\n                onChange={(e) => setText2(e.target.value)}\n                type=\"text\"\n                className=\"form-control\"\n                id=\"inputPassword\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">\n              Gateway X:<span className=\"required-label\">*</span>\n            </label>\n            <div className=\"d-flex align-items-sm-center col-sm-10\">\n              <input\n                required\n                value={gatewayX}\n                onChange={(e) => setGatewayX(e.target.value)}\n                type=\"text\"\n                className=\"form-control\"\n                id=\"inputPassword\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">\n              Gateway Y:<span className=\"required-label\">*</span>\n            </label>\n            <div className=\"d-flex align-items-sm-center col-sm-10\">\n              <input\n                required\n                value={gatewayY}\n                onChange={(e) => setGatewayY(e.target.value)}\n                type=\"text\"\n                className=\"form-control\"\n                id=\"inputPassword\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"d-flex justify-content-center create-catagory-btns\">\n          <button\n            onClick={() => window.history.back()}\n            type=\"button\"\n            className=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\"\n          >\n            Cancel<i className=\"px-2 fa fa-times\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"submit\"\n            className=\"font-weight-bold m-3 py-2 px-4 btn btn-success\"\n          >\n            Save<i className=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </form>\n      <ToastContainer />\n    </div>\n  );\n}\n"],"names":["Edit","id","useParams","React","gatewayMac","setGatewayMac","description","setDescription","text1","setText1","text2","setText2","gatewayX","setGatewayX","gatewayY","setGatewayY","fetch","url","method","response","ok","json","data","success","gateway_detail","toast","fetchData","className","onSubmit","e","headers","body","JSON","stringify","window","location","origin","preventDefault","submitData","handleSubmit","htmlFor","readOnly","value","type","onChange","target","required","onClick","history","back"],"sourceRoot":""}