{"version":3,"sources":["screens/SystemSettings/settings.js"],"names":["Edit","React","useState","plexValue","setPlexValue","cronValue","setCronValue","interval","setInterval","rssiDeleteTime","setRSSIDeleteTime","fingerPrintDocuments","setFingerPrintDocuments","median","setMedian","useEffect","a","fetch","url","method","response","ok","json","data","success","settings_detail","toast","error","fetchData","className","onSubmit","e","plexvalue","cronvalue","rssideletetime","fingerprintdocuments","Median","Interval","console","log","headers","body","JSON","stringify","response1","response2","response3","response4","response5","preventDefault","submitData","handleSubmit","class","for","required","value","onChange","target","type","id","checked","onClick","window","location","reload"],"mappings":"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","file":"static/js/58.27cf146a.chunk.js","sourcesContent":["import React from 'react'\nimport { url } from '../../helpers/helpers';\nimport { ToastContainer, toast } from 'react-toastify';\nexport default function Edit() {\n    const [plexValue, setPlexValue] = React.useState('');\n    const [cronValue, setCronValue] = React.useState('');\n    const [interval, setInterval] = React.useState('5');\n    const [rssiDeleteTime, setRSSIDeleteTime] = React.useState('');\n    const [fingerPrintDocuments, setFingerPrintDocuments] = React.useState('');\n    const [median, setMedian] = React.useState(false);\n    \n    React.useEffect(() => {\n        async function fetchData() {\n            const response = await fetch(url + 'systemSettings/getSystemSettings/', {\n                method: 'GET',\n            })\n            if (response.ok === true){\n                const data = await response.json();\n                if(data.success == true){\n                    const settings_detail = data.data;\n                    setPlexValue(settings_detail[0].plexValue);\n                    setCronValue(settings_detail[0].cronValue);\n                    setRSSIDeleteTime(settings_detail[0].rssiDeleteTime);\n                    setFingerPrintDocuments(settings_detail[0].fingerPrintDocuments);\n                    setMedian(settings_detail[0].median);\n                }else{\n                    toast.error(\"Oops something went wrong!\")\n                }\n            }\n            else toast.error('Response not fetched properly');\n        }\n        fetchData();\n    }, [])\n     \n    const handleSubmit = e => {\n        e.preventDefault();\n        async function submitData() {\n            let plexvalue = {\n                \"plexValue\": plexValue\n            }\n            let cronvalue = {\n                \"cronValue\": cronValue\n            }\n            let rssideletetime = {\n                \"rssiDeleteTime\": rssiDeleteTime\n            }\n            let fingerprintdocuments = {\n                \"fingerPrintDocuments\": fingerPrintDocuments\n            }\n            let Median = {\n                \"median\" : median\n            }\n\n            let Interval = {\n                \"interval\" : interval\n            }\n            console.log(median);\n            const response = await fetch(url + 'systemSettings/addPlexValue/', {\n                method: 'POST',\n                headers : {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(plexvalue)\n            })\n            if(response.ok === true){\n                const data = await response.json();\n                if(data.success == true){                    \n                  console.log('Plex value successfully updated');\n                }\n                else toast.error('Internal Server Error');\n            }\n            \n            const response1 = await fetch(url + 'systemSettings/addCronValue/', {\n                method: 'POST',\n                headers : {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(cronvalue)\n            })\n            if(response1.ok === true){\n                const data = await response1.json();\n                if(data.success == true){\n                    console.log('Cron value successfully updated');                    \n                }\n                else toast.error('Internal Server Error');\n            }\n\n            const response2 = await fetch(url + 'systemSettings/rssiDeleteTime/', {\n                method: 'POST',\n                headers : {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(rssideletetime)\n            })\n            if(response2.ok === true){\n                const data = await response2.json();\n                if(data.success == true){\n                    console.log('RSSI Delete Time successfully updated');                    \n                }\n                else toast.error('Internal Server Error');\n            }\n\n            const response3 = await fetch(url + 'systemSettings/addFingerPrintDocuments/', {\n                method: 'POST',\n                headers : {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(fingerprintdocuments)\n            })\n\n            if(response3.ok === true){\n                const data = await response3.json();\n                if(data.success == true){\n                    console.log('Finger Print Documents successfully updated');                    \n                }\n                else toast.error('Internal Server Error');\n            }\n            \n            const response4 = await fetch(url + 'systemSettings/addMedian/', {\n                method: 'POST',\n                headers : {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(Median)\n            })\n\n            if (response4.ok === true) {\n                const data = await response4.json();\n                if(data.success == true) {\n                    console.log('Median Successfully updated');\n                    toast.success(\"Values Updated Successfully\");\n                }else {\n                    toast.error(\"Internal Server Error!\");\n                }\n            }\n\n            const response5 = await fetch(url + '/systemSettings/addGatewayInterval', {\n                method: 'POST',\n                headers : {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(Interval)\n            })\n\n            if (response5.ok === true) {\n                const data = await response5.json();\n                if(data.success == true) {\n                    console.log('Inverval value Successfully updated');\n                    \n                }else {\n                    toast.error(\"Internal Server Error!\");\n                }\n            }\n        }\n        submitData();\n    }\n\n    return (\n        <div className=\"container create-page-main-section\">\n            <form onSubmit={e => handleSubmit(e)}>\n                <div className='p-sm-5 create-form-field'>\n                    <div class=\"form-group row\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Plex Value:<span className='required-label'>*</span></label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={plexValue} onChange={e => setPlexValue(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Cron Value:<span className='required-label'>*</span></label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={cronValue} onChange={e => setCronValue(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">RSSI Delete Time:<span className='required-label'>*</span></label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={rssiDeleteTime} onChange={e => setRSSIDeleteTime(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Finger Print Documents:<span className='required-label'>*</span></label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={fingerPrintDocuments} onChange={e => setFingerPrintDocuments(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Finger Print Interval:<span className='required-label'>*</span></label>\n                        <div class=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={interval} onChange={e => setInterval(e.target.value)} type=\"text\" class=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Median:</label>\n                        <div class=\"d-flex b-0 col-sm-1\">\n                        <input checked={median} type=\"checkbox\" onChange={e => setMedian(!median)} id=\"inputPassword\" />\n                        </div>\n                    </div>\n                </div>\n                <div class=\"d-flex justify-content-center create-catagory-btns\">\n                    <button onClick={() => window.location.reload()} type=\"button\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                        class=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"submit\" class=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        class=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n            <ToastContainer />\n        </div>\n    )\n}"],"sourceRoot":""}