{"version":3,"sources":["screens/Environment/create.js"],"names":["Create","React","useState","name","setName","description","setDescription","text1","setText1","text2","setText2","width","setWidth","height","setHeight","distance_points","setDistancePoints","className","onSubmit","e","a","data","fetch","url","method","headers","body","JSON","stringify","response","ok","json","success","alert","preventDefault","submitData","handleSubmit","for","required","value","onChange","target","type","id","onClick","window","history","back"],"mappings":"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","file":"static/js/53.bf0baa2d.chunk.js","sourcesContent":["import React from 'react';\nimport { url } from '../../helpers/helpers';\n\nexport default function Create() {\n\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n    const [text1, setText1] = React.useState('');\n    const [text2, setText2] = React.useState('');\n    const [width, setWidth] = React.useState('');\n    const [height, setHeight] = React.useState('');\n    const [distance_points, setDistancePoints] = React.useState(0); \n    \n    const handleSubmit = e => {\n        e.preventDefault();\n\n        async function submitData() {\n            let data = {\n                \"name\": name,\n                \"description\": description,\n                \"text1\": text1,\n                \"text2\": text2,\n                \"width\": width,\n                \"height\": height,\n                \"distance_points\": distance_points\n            }\n            const response = await fetch(url + 'environment/addEnvironment', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                if (data.success == true) {\n                    setName('');\n                    setDescription('');\n                    setText1('');\n                    setText2('');\n                    setWidth('');\n                    setHeight('');\n                    setDistancePoints(0);\n                    alert(\"Environment created successfully!\")\n                } else {\n                    alert(\"Oops something went wrong!\")\n                }\n            }\n        }\n        submitData();\n    }\n    return (\n        <div className=\"container create-page-main-section\">\n            <form onSubmit={e => handleSubmit(e)}>\n                <div className='p-sm-5 create-form-field'>\n                    <div className=\"form-group row\">\n                        <label for=\"inputPassword\" className=\"col-sm-2 col-form-label\">Name:<span className='required-label'>*</span></label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={name} onChange={e => setName(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label for=\"inputPassword\" className=\"col-sm-2 col-form-label\">Description:<span className='required-label'>*</span></label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={description} onChange={e => setDescription(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label for=\"inputPassword\" className=\"col-sm-2 col-form-label\">Text1:<span className='required-label'>*</span></label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={text1} onChange={e => setText1(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label for=\"inputPassword\" className=\"col-sm-2 col-form-label\">Text2:<span className='required-label'>*</span></label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={text2} onChange={e => setText2(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label for=\"inputPassword\" className=\"col-sm-2 col-form-label\">Width:<span className='required-label'>*</span></label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={width} onChange={e => setWidth(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label for=\"inputPassword\" className=\"col-sm-2 col-form-label\">Height:<span className='required-label'>*</span></label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={height} onChange={e => setHeight(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label for=\"inputPassword\" className=\"col-sm-2 col-form-label\">Distance Points:<span className='required-label'>*</span></label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={distance_points} onChange={e => setDistancePoints(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"d-flex justify-content-center create-catagory-btns\">\n                    <button onClick={() => window.history.back()} type=\"button\" className=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                        className=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"submit\" className=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        className=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n        </div>\n    )\n}"],"sourceRoot":""}