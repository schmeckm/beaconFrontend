{"version":3,"file":"static/js/9921.4daa3bc0.chunk.js","mappings":"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","sources":["screens/Environment/create.js"],"sourcesContent":["import React from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { url } from '../../helpers/helpers';\n\nexport default function Create() {\n\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n    const [text1, setText1] = React.useState('');\n    const [text2, setText2] = React.useState('');\n    const [width, setWidth] = React.useState('');\n    const [height, setHeight] = React.useState('');\n    const [distance_points, setDistancePoints] = React.useState(0); \n    \n    const handleSubmit = e => {\n        e.preventDefault();\n\n        async function submitData() {\n            let data = {\n                \"name\": name,\n                \"description\": description,\n                \"text1\": text1,\n                \"text2\": text2,\n                \"width\": width,\n                \"height\": height,\n                \"distance_points\": distance_points\n            }\n            const response = await fetch(url + 'environment/addEnvironment', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n                if (data.success == true) {\n                    setName('');\n                    setDescription('');\n                    setText1('');\n                    setText2('');\n                    setWidth('');\n                    setHeight('');\n                    setDistancePoints(0);\n                    toast.info(\"Environment created successfully!\")\n                } else {\n                    toast.error(\"Oops something went wrong!\")\n                }\n            }\n        }\n        submitData();\n    }\n    return (\n        <div className=\"container create-page-main-section\">\n            <form onSubmit={e => handleSubmit(e)}>\n                <div className='p-sm-5 create-form-field'>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Name:<span className='required-label'>*</span></label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={name} onChange={e => setName(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Description:<span className='required-label'>*</span></label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={description} onChange={e => setDescription(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Text1:<span className='required-label'>*</span></label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={text1} onChange={e => setText1(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Text2:<span className='required-label'>*</span></label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={text2} onChange={e => setText2(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Width:<span className='required-label'>*</span></label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={width} onChange={e => setWidth(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Height:<span className='required-label'>*</span></label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={height} onChange={e => setHeight(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"inputPassword\" className=\"col-sm-2 col-form-label\">Distance Points:<span className='required-label'>*</span></label>\n                        <div className=\"d-flex align-items-sm-center col-sm-10\">\n                            <input required value={distance_points} onChange={e => setDistancePoints(e.target.value)} type=\"text\" className=\"form-control\" id=\"inputPassword\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"d-flex justify-content-center create-catagory-btns\">\n                    <button onClick={() => window.history.back()} type=\"button\" className=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                        className=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                    <button type=\"submit\" className=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Save<i\n                        className=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                </div>\n            </form>\n            <ToastContainer />\n        </div>\n    )\n}"],"names":["Create","React","name","setName","description","setDescription","text1","setText1","text2","setText2","width","setWidth","height","setHeight","distance_points","setDistancePoints","className","onSubmit","e","data","fetch","url","method","headers","body","JSON","stringify","response","ok","json","success","toast","preventDefault","submitData","handleSubmit","htmlFor","required","value","onChange","target","type","id","onClick","window","history","back"],"sourceRoot":""}