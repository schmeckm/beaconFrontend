{"version":3,"sources":["components/CustomModal.js","screens/Beacon/index.js"],"names":["CustomModal","props","modal","setModal","deleteEntry","className","show","onClose","closeButton","onClick","color","Index","React","useState","beaconList","setBeaconList","id","setId","useEffect","a","fetch","url","method","response","ok","json","data","map","item","index","_id","beaconMac","description","fetchData","success","deleteData","to","xs","lg","items","fields","columnFilter","tableFilter","itemsPerPageSelect","itemsPerPage","hover","sorter","pagination","scopedSlots","class","style","cursor","value"],"mappings":"6KAAA,8DAGe,SAASA,EAAYC,GAChC,IAAQC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,SAAUC,EAAgBH,EAAhBG,YAEzB,OACI,qBAAKC,UAAU,mBAAf,SACI,eAAC,KAAD,CACIC,KAAMJ,EACNK,QAASJ,EAFb,UAII,cAAC,KAAD,CAAcK,aAAW,IAEzB,eAAC,KAAD,CAAYH,UAAU,oBAAtB,UACI,+EACA,sBAAKA,UAAU,wCAAf,UACI,wBAAQI,QAAS,kBAAML,KAAeC,UAAU,uBAAhD,0BACA,wBAAQA,UAAU,0CAA0CK,MAAM,YAAYD,QAAS,kBAAMN,GAAS,IAAtG,iC,oLCZT,SAASQ,IACtB,IACA,EAAoCC,IAAMC,SAAS,IAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoBH,IAAMC,SAAS,MAAnC,mBAAOG,EAAP,KAAWC,EAAX,KACA,EAA0BL,IAAMC,UAAS,GAAzC,mBAAOX,EAAP,KAAcC,EAAd,KAEAS,IAAMM,WAAU,WAAM,4CAEpB,8BAAAC,EAAA,sEACyBC,MAAMC,IAAM,yBAA0B,CAC3DC,OAAQ,QAFZ,WAKsB,KAJdC,EADR,QAKeC,GALf,gCAMuBD,EAASE,OANhC,OAMUC,EANV,OAOIX,EAAcW,EAAKA,KAAKC,KAAI,SAACC,EAAMC,GACjC,MAAO,CACL,IAAKA,EAAQ,EACb,GAAMD,EAAKE,IACX,UAAaF,EAAKG,UAClB,YAAcH,EAAKI,iBAZ3B,4CAFoB,uBAAC,WAAD,wBAmBpBC,KACC,IAsCH,OACE,oCACE,cAAC,IAAD,CAAa/B,MAAOA,EAAOC,SAAUA,EAAUC,YAtC/B,WAAM,4CACxB,8BAAAe,EAAA,sEACyBC,MAAMC,IAAM,yBAA2BL,EAAI,CAChEM,OAAQ,WAFZ,cACQC,EADR,gBAKqBA,EAASE,OAL9B,OAMsB,GANtB,OAMWS,UAGQD,EAHS,uCAGxB,8BAAAd,EAAA,sEACyBC,MAAMC,IAAM,yBAA0B,CAC3DC,OAAQ,QAFZ,WAKsB,KAJdC,EADR,QAKeC,GALf,gCAMuBD,EAASE,OANhC,OAMUC,EANV,OAOIX,EAAcW,EAAKA,KAAKC,KAAI,SAACC,EAAMC,GAC/B,MAAO,CACL,IAAKA,EAAQ,EACb,GAAMD,EAAKE,IACX,UAAaF,EAAKG,UAClB,YAAcH,EAAKI,iBAZ7B,2CAHwB,qDACxB7B,GAAS,GACTc,EAAM,IAkBNgB,KA1BJ,2CADwB,yBAAC,WAAD,wBA8BxBE,MASE,cAAC,IAAD,CAAM9B,UAAU,4BAA4B+B,GAAG,iBAA/C,2BACA,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KAAjB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,MAAOzB,EACP0B,OAxEG,CAAC,IAAK,YAAY,cAAe,UAyEpCC,cAAY,EACZC,aAAW,EACXC,oBAAkB,EAClBC,aAAc,EACdC,OAAK,EACLC,QAAM,EACNC,YAAU,EACVC,YAAa,CACX,OAAU,SAACpB,GAAD,OACR,+BACE,cAAC,IAAD,CAAMvB,UAAU,OAAO+B,GAAE,uBAAkBR,EAAKZ,IAAhD,SAAsD,mBAAGiC,MAAM,eAAe,cAAY,WAC1F,mBAAGC,MAAO,CAAEC,OAAQ,WAAa1C,QAAS,kBAzB1C2C,EAyB0DxB,EAAKZ,GAxB/EC,EAAMmC,QACNjD,GAAS,GAFO,IAAAiD,GAyBoEH,MAAM,cAAc,cAAY","file":"static/js/17.8d5696db.chunk.js","sourcesContent":["import { CButton, CModal, CModalBody, CModalFooter, CModalHeader } from '@coreui/react'\nimport React from 'react'\n\nexport default function CustomModal(props) {\n    const { modal, setModal, deleteEntry } = props;\n\n    return (\n        <div className='delete_modal_box'>\n            <CModal\n                show={modal}\n                onClose={setModal}\n            >\n                <CModalHeader closeButton>\n                </CModalHeader>\n                <CModalBody className='delete_modal_body'>\n                    <p> Are you sure you want to delete this record ?</p>\n                    <div className='btn-div-modal-group delete_modal_Btns'>\n                        <button onClick={() => deleteEntry()} className='delete_modal_yes_Btn'>Yes, Approve</button>\n                        <button className='btn btn-primary delete_modal_cancel_Btn' color=\"secondary\" onClick={() => setModal(false)}>Cancel</button>\n                    </div>\n                </CModalBody>\n            </CModal>\n        </div>\n    )\n}\n","import { CBadge, CCard, CCardBody, CCol, CDataTable } from '@coreui/react';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { url } from '../../helpers/helpers';\nimport CustomModal from '../../components/CustomModal';\n\nexport default function Index() {\n  const fields = ['#', 'beaconMac','description', 'action'];\n  const [beaconList, setBeaconList] = React.useState([]);\n  const [id, setId] = React.useState(null);\n  const [modal, setModal] = React.useState(false);\n\n  React.useEffect(() => {\n\n    async function fetchData() {\n      const response = await fetch(url + 'dbBeacon/getAllBeacons', {\n        method: 'GET',\n      })\n\n      if (response.ok === true) {\n        const data = await response.json();\n        setBeaconList(data.data.map((item, index) => {\n          return {\n            '#': index + 1,\n            'id': item._id,\n            'beaconMac': item.beaconMac,\n            'description':item.description,\n          }\n        }))\n      }\n    }\n    fetchData();\n  }, [])\n\n  const deleteEntry = () => {\n    async function deleteData() {\n      const response = await fetch(url + 'dbBeacon/deleteBeacon/' + id, {\n        method: 'DELETE',\n      })\n\n      const data = await response.json();\n      if (data.success == true) {\n        setModal(false);\n        setId('');\n        async function fetchData() {\n          const response = await fetch(url + 'dbBeacon/getAllBeacons', {\n            method: 'GET',\n          })\n\n          if (response.ok === true) {\n            const data = await response.json();\n            setBeaconList(data.data.map((item, index) => {\n                return {\n                  '#': index + 1,\n                  'id': item._id,\n                  'beaconMac': item.beaconMac,\n                  'description':item.description,\n                }\n              }))\n          }\n        }\n        fetchData();\n      }\n    }\n    deleteData();\n  }\n  const showModal = value => {\n    setId(value);\n    setModal(true)\n  }\n  return (\n    <section>\n      <CustomModal modal={modal} setModal={setModal} deleteEntry={deleteEntry} />\n      <Link className=\"btn btn-primary mb-3 ml-3\" to='/create/beacon'>Create Beacon</Link>\n      <CCol xs=\"12\" lg=\"12\">\n        <CCard>\n          <CCardBody>\n            <CDataTable\n              items={beaconList}\n              fields={fields}\n              columnFilter\n              tableFilter\n              itemsPerPageSelect\n              itemsPerPage={5}\n              hover\n              sorter\n              pagination\n              scopedSlots={{\n                'action': (item) => (\n                  <td>\n                    <Link className=\"mr-2\" to={`/edit/beacon/${item.id}`}><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></Link>\n                    <i style={{ cursor: \"pointer\" }} onClick={() => showModal(item.id)} class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                  </td>\n                )\n              }\n              }\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </section>\n  )\n}"],"sourceRoot":""}