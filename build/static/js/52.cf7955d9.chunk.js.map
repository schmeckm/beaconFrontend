{"version":3,"sources":["screens/BeaconConfiguration/GetPosition.js"],"names":["GetPosition","React","useState","beacons","setBeacons","currentBeacon","setCurrentBeacon","start","setStart","end","setEnd","list","setList","useEffect","a","fetch","url","method","response","ok","json","data","map","item","index","_id","beaconMac","fetchData","className","onSubmit","e","preventDefault","send","headers","body","JSON","stringify","label","Date","toISOString","success","console","log","positionX","positionY","moment","createdAt","format","toast","error","submit","value","onChange","options","type","target","required","onClick","window","history","back","xs","lg","items","fields","columnFilter","tableFilter","itemsPerPageSelect","itemsPerPage","hover","sorter","pagination"],"mappings":"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","file":"static/js/52.cf7955d9.chunk.js","sourcesContent":["import { url } from '../../helpers/helpers';\nimport React from 'react'\nimport Select from 'react-select'\nimport moment from 'moment';\n\nimport { CCard, CCardBody, CCol, CDataTable } from '@coreui/react';\nimport { toast, ToastContainer } from 'react-toastify';\nexport default function GetPosition() {\n    const fields = ['#', 'beaconMac', 'positionX', 'positionY', 'createdAt'];\n    const [beacons, setBeacons] = React.useState([]);\n    const [currentBeacon, setCurrentBeacon] = React.useState(\"\");\n    const [start, setStart] = React.useState(\"\");\n    const [end, setEnd] = React.useState(\"\");\n    const [list, setList] = React.useState([]);\n\n    React.useEffect(() => {\n        async function fetchData() {\n            const response = await fetch(url + 'dbBeacon/getAllBeacons', {\n                method: 'GET',\n            })\n\n            if (response.ok === true) {\n                const data = await response.json();\n\n                setBeacons(data.data.map((item, index) => {\n                    return {\n                        'value': item._id,\n                        'label': item.beaconMac,\n                    }\n                }))\n            }\n        }\n        fetchData();\n    }, [])\n\n    function submit(e) {\n        e.preventDefault();\n\n        if (currentBeacon) {\n            async function send() {\n                const response = await fetch(url + 'beacon/getPosition', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        \"beaconMac\": currentBeacon.label,\n                        \"startTime\": new Date(start).toISOString(),\n                        \"endTime\": new Date(end).toISOString()\n                    })\n                });\n\n                if (response.ok == true) {\n                    const data = await response.json();\n                    if (data.success == true) {\n                        console.log(data);\n                        setList(data.data.map((item, index) => {\n                            return {\n                                '#': index + 1,\n                                'id': item._id,\n                                'beaconMac': item.beaconMac,\n                                'positionX': item.positionX,\n                                'positionY': item.positionY,\n                                'createdAt': moment(item.createdAt).format(\"MM-DD-YYYY hh:mm:ss A\")\n                            }\n                        }))\n                    }\n                } else {\n                    toast.error(\"Oops something went wrong!\");\n                }\n            };\n            send()\n        } else {\n            toast.error(\"Please select beacon\");\n        }\n    }\n\n    return (\n        <div>\n        <div className=\"container create-page-main-section\">\n            <div className='p-sm-5 create-form-field'>\n                <form onSubmit={e => submit(e)}>\n                    <div className='row'>\n                        <div className='col-md-4 form-group'>\n                            <label>Beacon</label>\n                            <Select value={currentBeacon} onChange={setCurrentBeacon} options={beacons} />\n                        </div>\n                        <div className='col-md-4 form-group'>\n                            <label>Start Time</label>\n                            <input type=\"datetime-local\" className='form-control' value={start} onChange={e => setStart(e.target.value)} required />\n                        </div>\n                        <div className='col-md-4 form-group'>\n                            <label>End Time</label>\n                            <input type=\"datetime-local\" className='form-control' value={end} onChange={e => setEnd(e.target.value)} required />\n                        </div>\n                    </div>\n                    <div className=\"d-flex justify-content-center create-catagory-btns\">\n                        <button onClick={() => window.history.back()} type=\"button\" className=\"font-weight-bold m-3 py-2 px-4 btn btn-danger\">Cancel<i\n                            className=\"px-2 fa fa-times\" aria-hidden=\"true\"></i></button>\n                        <button type=\"submit\" className=\"font-weight-bold m-3 py-2 px-4 btn btn-success\">Execute<i\n                            className=\"px-2 fa fa-floppy-o\" aria-hidden=\"true\"></i></button>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div className=\"container\">\n            <CCol className=\"mt-2\" xs=\"12\" lg=\"12\">\n                <CCard>\n                    <CCardBody>\n                        <CDataTable\n                            items={list}\n                            fields={fields}\n                            columnFilter\n                            tableFilter\n                            itemsPerPageSelect\n                            itemsPerPage={5}\n                            hover\n                            sorter\n                            pagination\n                        />\n                    </CCardBody>\n                </CCard>\n            </CCol>\n        </div>\n        <ToastContainer />\n    </div>\n    )\n}\n"],"sourceRoot":""}