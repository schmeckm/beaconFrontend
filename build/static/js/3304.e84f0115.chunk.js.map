{"version":3,"file":"static/js/3304.e84f0115.chunk.js","mappings":"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","sources":["reusable/DocsLink.js","views/notifications/alerts/Alerts.js"],"sourcesContent":["import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","import React from 'react'\nimport {\n  CAlert,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CLink,\n  CProgress,\n  CRow\n} from '@coreui/react'\nimport { DocsLink } from 'src/reusable'\n\nconst Alerts = () => {\n  const [visible, setVisible] = React.useState(10)\n\n  return (\n    <>\n      <CRow>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <DocsLink name=\"CAlert\"/>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert color=\"primary\">\n                This is a primary alert — check it out!\n              </CAlert>\n              <CAlert color=\"secondary\">\n                This is a secondary alert — check it out!\n              </CAlert>\n              <CAlert color=\"success\">\n                This is a success alert — check it out!\n              </CAlert>\n              <CAlert color=\"danger\">\n                This is a danger alert — check it out!\n              </CAlert>\n              <CAlert color=\"warning\">\n                This is a warning alert — check it out!\n              </CAlert>\n              <CAlert color=\"info\">\n                This is a info alert — check it out!\n              </CAlert>\n              <CAlert color=\"light\">\n                This is a light alert — check it out!\n              </CAlert>\n              <CAlert color=\"dark\">\n                This is a dark alert — check it out!\n              </CAlert>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <small> use <code>.alert-link</code> to provide links</small>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert color=\"primary\">\n                {/*eslint-disable-next-line*/}\n                This is a primary alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"secondary\">\n                {/*eslint-disable-next-line*/}\n                This is a secondary alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"success\">\n                {/*eslint-disable-next-line*/}\n                This is a success alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"danger\">\n                {/*eslint-disable-next-line*/}\n                This is a danger alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"warning\">\n                {/*eslint-disable-next-line*/}\n                This is a warning alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"info\">\n                {/*eslint-disable-next-line*/}\n                This is a info alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"light\">\n                {/*eslint-disable-next-line*/}\n                This is a light alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n              <CAlert color=\"dark\">\n                {/*eslint-disable-next-line*/}\n                This is a dark alert with&nbsp;\n                <CLink className=\"alert-link\">an example link</CLink>.\n                Give it a click if you like.\n              </CAlert>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <small> additional content</small>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert color=\"success\">\n                <h4 className=\"alert-heading\">Well done!</h4>\n                <p>\n                  Aww yeah, you successfully read this important alert message. This example text is going\n                  to run a bit longer so that you can see how spacing within an alert works with this kind\n                  of content.\n                </p>\n                <hr />\n                <p className=\"mb-0\">\n                  Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\n                </p>\n              </CAlert>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" md=\"6\">\n          <CCard>\n            <CCardHeader>\n              Alerts\n              <small> dismissing</small>\n            </CCardHeader>\n            <CCardBody>\n              <CAlert\n                color=\"info\"\n                closeButton\n              >\n                I am an dismissible alert!\n              </CAlert>\n              <CAlert\n                color=\"warning\"\n                show={visible}\n                closeButton\n                onShowChange={setVisible}\n              >\n                I will be closed in {visible} seconds!\n                <CProgress\n                  striped\n                  color=\"warning\"\n                  value={Number(visible) * 10}\n                  size=\"xs\"\n                  className=\"mb-3\"\n                />\n              </CAlert>\n\n              <CButton color=\"primary\" onClick={() => setVisible(10)}>\n                Reset timer\n              </CButton>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Alerts\n"],"names":["DocsLink","props","name","text","rest","href","className","rel","target","React","visible","setVisible","xs","md","color","closeButton","show","onShowChange","striped","value","Number","size","onClick"],"sourceRoot":""}